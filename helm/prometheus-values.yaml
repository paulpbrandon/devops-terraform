server:
  global:
    scrape_interval: 30s

serverFiles:
  prometheus.yml:
    scrape_configs:
      - job_name: 'drone'
        scrape_interval: 10s
        bearer_token: ${drone_metrics_bearer_token}

        static_configs:
          - targets: ['droneserver.drone.svc.cluster.local']
      - job_name: 'kubernetes-pods'
        honor_labels: true

        kubernetes_sd_configs:
          - role: pod

        relabel_configs:
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape ]
            action: keep
            regex: true
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow ]
            action: drop
            regex: true
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scheme ]
            action: replace
            regex: (https?)
            target_label: __scheme__
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_path ]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [ __address__, __meta_kubernetes_pod_annotation_prometheus_io_port ]
            action: replace
            regex: (.+?)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
            replacement: __param_$1
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [ __meta_kubernetes_namespace ]
            action: replace
            target_label: namespace
          - source_labels: [ __meta_kubernetes_pod_name ]
            action: replace
            target_label: pod
          - source_labels: [ __meta_kubernetes_pod_phase ]
            regex: Pending|Succeeded|Failed|Completed
            action: drop