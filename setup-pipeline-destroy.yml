trigger:
- none

pool:
  vmImage: ubuntu-latest

steps:
  - task: AzureCLI@2
    displayName: 'Azure CLI get state store key'
    inputs:
      azureSubscription: 'Azure'
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
       az storage account keys list -g $(tfstategroup) -n $(tfstatestore) | grep value | sed -n 1p | sed 's/.*"value": "\(.*\)"/\1/g' > .key
     
       echo "##vso[task.setvariable variable=storagekey;issecret=true]$(cat .key)"
  - task: replacetokens@5
    displayName: 'Replace tokens in tf files'
    inputs:
      rootDirectory: '$(System.DefaultWorkingDirectory)/terraform_drone_setup'
      targetFiles: |
       **/providers.tf
       **/*.tfvars
      tokenPattern: rm
      escapeType: none
  - task: TerraformInstaller@0
    displayName: 'Install Terraform 1.2.7'
    inputs:
      terraformVersion: '1.2.7'
  - task: TerraformTaskV3@3
    displayName: 'Terraform init'
    inputs:
      provider: 'azurerm'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform_drone_setup'
      backendServiceArm: 'Azure'
      backendAzureRmResourceGroupName: '$(tfstategroup)'
      backendAzureRmStorageAccountName: '$(tfstatestore)'
      backendAzureRmContainerName: setup
      backendAzureRmKey: terraform.tfstate
  - task: TerraformTaskV3@3
    displayName: 'Terraform destroy'
    inputs:
      provider: 'azurerm'
      command: 'destroy'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform_drone_setup'
      environmentServiceNameAzureRM: 'Azure'
